# Mediawiki Version outdated gewechselt auf lts version
FROM mediawiki:1.32.0

MAINTAINER alexhunziker@sunrise.ch

# Workaround for this strange bug:
# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=863199
RUN set -x; \
	mkdir -p /usr/share/man/man1

# Debian Version "sid" breaks dependencies from libc and libgcc, removed (by commenting)
# RUN echo "deb http://deb.debian.org/debian/ sid main" >> /etc/apt/sources.list

# Install required packages
RUN set -x; \
	apt-get update \
	&& apt-get install -y --no-install-recommends \
	git \
	wget \
	nano \
	unzip \
	&& apt-get clean


# Install OpenJDK 8
# Add repo, since Debian 10 only includes JDK11 (default)
# RUN echo "deb http://deb.debian.org/debian/ sid main" >> /etc/apt/sources.list
# Debian version Sid's package list doesn't include openjdk-8 anymore, include stretch repo instead
RUN echo "deb http://security.debian.org/debian-security stretch/updates main" >> /etc/apt/sources.list
RUN apt-get clean && \
	apt-get update \
	&& apt-get install -y --no-install-recommends \
	openjdk-8-jdk
RUN echo "JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/" >> /etc/environment
RUN apt-get install -y --no-install-recommends maven
RUN java -version

#Install pip and dkpro-cassis
RUN apt-get install python3-pip
RUN pip3 install dkpro-cassis

# Set MediaWiki Variables
#ENV Variable geupdatet
#ENV MW_Version=1.32.0
ENV MW_Version=1.32.0
ENV MW_Home=/var/www/html
ENV MW_Volume=/mediawiki

# Redirect logs to stdout/stderr
RUN set -ex \
	&& ln -sfT /dev/stderr "$APACHE_LOG_DIR/error.log" \
	&& ln -sfT /dev/stdout "$APACHE_LOG_DIR/access.log" \
	&& ln -sfT /dev/stdout "$APACHE_LOG_DIR/other_vhosts_access.log"

# Customize logo
COPY logo.png $MW_Home/logo.png

# MediaWiki extensions, clone them from github.
RUN set -x; \
	cd $MW_Home/extensions \
	&& git clone https://github.com/wikimedia/mediawiki-extensions-Graph.git Graph \
	&& git clone https://github.com/wikimedia/mediawiki-extensions-JsonConfig.git  JsonConfig \
	&& cd Graph \
	&& git checkout wmf/1.34.0-wmf.18 \
	&& cd ../JsonConfig \
	&& git checkout wmf/1.34.0-wmf.18 

# Open Port
EXPOSE 8080:80

# Copy LocalSettings (Name is changed to trigger MW installation)
COPY LocalSettings.php $MW_Home/DockerSettings.php

# Now we add the custom composer file and install composer
COPY composer.local.json $MW_Home/composer.local.json
RUN wget -cO - https://getcomposer.org/download/1.0.0/composer.phar > composer.phar

#Install Maps-Extension
RUN php composer.phar require --no-update mediawiki/maps:7.2
RUN php composer.phar update mediawiki/maps --no-dev -o;

# Copy Files for input procedure
COPY import $MW_Home/import
RUN mkdir -p $MW_Home/import/corpus
RUN chmod 777 -R import

# Download and Build textimager CLI
# This will clone the latest version of textimager-client; if it is broken, build will fail.
RUN set -x; \
	cd $MW_Home/import \
	&& git clone https://github.com/MarcelFaizi/textimager-client.git \
	&& cd textimager-client \
	&& mvn install -DskipTests -P CLI\
	&& mv target/textimager-CLI.jar ../textimager-CLI.jar \
	&& cd .. \
	&& rm -r textimager-client

# Download Word2Vec word embeddings
#RUN set -x; \
#	cd $MW_Home/import \
#	&& echo 'Download syntagmatic embeddings' \
#	&& wget -q http://service.hucompute.org/embeddings/api/v1/embeddings/zeit_lemmapos_mikolov_cbow.vec/download -O word2vec/syntagmatic-de.vec \
#	&& echo 'Download paradigmatic embeddings' \
#	&& wget -q http://service.hucompute.org/embeddings/api/v1/embeddings/zeit_lemmapos_mikolov_skip.vec/download -O word2vec/paradigmatic-de.vec

#Put the word embeddings into /corpus2wiki/word2vec manually to avoid re-downloading them every time
COPY word2vec $MW_Home/import/word2vec/




# Copy custom extensions

COPY Corpus2WikiAnnotator $MW_Home/extensions/Corpus2WikiAnnotator/
COPY GeoViz $MW_Home/extensions/GeoViz/
COPY semiograph $MW_Home/extensions/semiograph/
RUN set -x; mkdir -p $MW_Home/resources/lib/selfmade/css
COPY Resources.php $MW_Home/resources/
COPY d3 $MW_Home/resources/lib/d3
COPY selfmade/*.js $MW_Home/resources/lib/selfmade/
COPY selfmade/*.css $MW_Home/resources/lib/selfmade/css/
COPY php.ini /usr/local/etc/php/php.ini
# Copy and run the config script
COPY config.sh /config.sh
RUN chmod -v +x /config.sh
CMD ["/config.sh"]

VOLUME ["$MW_Home/images", "$MW_Volume"]
